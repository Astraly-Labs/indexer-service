---
name: Task - Rust Tests & Coverage

on:
  workflow_dispatch:
  workflow_call:

env:
  HOST: 0.0.0.0
  PORT: 8080
  DATABASE_URL: postgres://postgres:postgres@localhost:5432
  AWS_REGION: eu-west-3
  LOCALSTACK_ENDPOINT: https://3d6f-2401-4900-1c69-6263-41b5-4a50-5745-c494.ngrok-free.app
  BINARY_BASE_PATH: /bin
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  APIBARA_AUTH_TOKEN: ${{ secrets.APIBARA_AUTH_TOKEN }}
  RUST_BACKTRACE: 1

jobs:
  coverage:
    # sadly, for now we have to "rebuild" for the coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      localstack:
        image: localstack/localstack:latest
        env:
          DEBUG: 1
        ports:
          - 4566:4566
          - 4571:4571
          - 8080:8080
        options: >-
          --health-cmd "curl -k https://localhost:4566"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup show

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: taiki-e/install-action@nextest

      - name: Download sink binaries
        run: |
          wget https://github.com/apibara/dna/releases/download/sink-webhook/v0.3.0/sink-webhook-x86_64-linux.gz
          gunzip sink-webhook-x86_64-linux.gz
          sudo cp sink-webhook-x86_64-linux /bin/sink-webhook

          wget https://github.com/apibara/dna/releases/download/sink-postgres/v0.4.0/sink-postgres-x86_64-linux.gz
          gunzip sink-postgres-x86_64-linux.gz
          sudo cp sink-postgres-x86_64-linux /bin/sink-postgres

      - name: Install awslocal
        run: pip install awscli-local

      - name: Create S3 Bucket and SQS Queues
        run: |
          awslocal s3api create-bucket --bucket indexer-service --region eu-west-3 --create-bucket-configuration LocationConstraint=eu-west-3
          awslocal s3api put-object --bucket indexer-service --key apibara-scripts/
          awslocal s3api list-buckets 
          awslocal sqs create-queue --queue-name indexer-service-start-indexer
          awslocal sqs create-queue --queue-name indexer-service-failed-indexer
          awslocal sqs create-queue --queue-name indexer-service-stop-indexer
          awslocal sqs list-queues
          awslocal sqs purge-queue --queue-url indexer-service-start-indexer

      - name: Clean workspace
        run: |
          cargo llvm-cov clean --workspace

      - name: Run llvm-cov
        run: |
          cargo llvm-cov nextest --release --test-threads=1 --lcov --output-path lcov.info

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false
